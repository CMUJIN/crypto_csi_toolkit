name: Auto Crypto CSI Analysis

on:
  schedule:
    # 每 4 小时执行一次
    - cron: "0 */4 * * *"
  workflow_dispatch:

jobs:
  run-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt || true
          pip install pandas numpy matplotlib requests openpyxl notion-client pyyaml

      - name: Run Crypto CSI Analysis
        run: |
          echo "=== Start CSI Auto Analysis ==="
          python - <<'PYCODE'
import subprocess, yaml
from pathlib import Path

# === Load config.yaml ===
config_path = Path("config.yaml")
if not config_path.exists():
    raise FileNotFoundError("Missing config.yaml")

config = yaml.safe_load(open(config_path))

for item in config.get("symbols", []):
    symbol = item["name"]
    freq = item.get("timeframe", "1h")
    start = item.get("start", "2025-08-01")
    print(f"=== Processing {symbol} ({freq}) ===")

    subprocess.run([
        "python", "crypto_cdd_fetcher.py",
        "--symbol", symbol,
        "--freq", freq,
        "--start", start,
        "--out", f"data/Binance_{symbol}_{freq}_{start}_to_latest.csv"
    ], check=True)

    subprocess.run([
        "python", "crypto_chip_timeline_analysis_PRO_v3.9.1.py",
        f"data/Binance_{symbol}_{freq}_{start}_to_latest.csv",
        "--window_strength", str(config["analysis"]["window_strength"]),
        "--window_zone", str(config["analysis"]["window_zone"]),
        "--bins_pct", str(config["analysis"]["bins_pct"]),
        "--beta", str(config["analysis"]["beta"]),
        "--half_life", str(config["analysis"]["half_life"]),
        "--quantile", str(config["analysis"]["quantile"]),
        "--ma_period", str(config["analysis"]["ma_period"]),
        "--smooth", str(config["analysis"]["smooth"]),
    ], check=True)

    print(f"[OK] Finished {symbol} ({freq}) analysis successfully.")
PYCODE

      - name: Copy analysis results to docs/
        run: |
          echo "[INFO] Copying analysis results to docs/..."
          mkdir -p docs
          cp -r data/* docs/ || true
          ls -lh docs/

      - name: Commit and push results
        run: |
          echo "[INFO] Commit results..."
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"
          git add docs/
          git commit -m "Auto update: $(date '+%Y-%m-%d %H:%M')" || echo "No changes to commit"
          git push || echo "No permission to push"

      - name: Upload results to Notion
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          python upload_to_notion.py
